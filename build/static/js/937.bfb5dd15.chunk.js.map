{"version":3,"file":"static/js/937.bfb5dd15.chunk.js","mappings":"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","sources":["Utils/Text.js","components/BMCModule/TextInputField.jsx","components/BMCModule/EditInput.jsx","components/BMCModule/List.jsx","components/BMCModule/EditableDiv.jsx","components/BMCModule/BrainstormingSec.jsx","components/PDFReports.jsx/BMCPdf.jsx","components/BMCModule/Percentage.jsx","pages/BMCModule.jsx"],"sourcesContent":["const Text = {\r\n    firstBox: {\r\n        title: 'Key Partnerships',\r\n        questions: ['Who are your suppliers, partners, strategic alliances?\\n', 'What are your and their motivations for the partnership?\\n', 'What resources do you receive from suppliers?\\n']\r\n    },\r\n    secondBox: {\r\n        title: 'Key Activities',\r\n        questions: ['What activities do you perform to build your product?\\n', 'What every-day activities do you do to solve problems?\\n']\r\n    },\r\n    thirdBox: {\r\n        title: 'Value Propositions',\r\n        questions: ['What value are you bringing to your customers?\\n', `What's unique about your product?\\n`, 'What are the defferent values you bring to different customers?\\n']\r\n    },\r\n    forthBox: {\r\n        title: 'Customer Relationships',\r\n        questions: ['To what extent do you deliver customer care (personal assistance or self-services)?\\n', 'What channels for customer communication do you have?\\n']\r\n    },\r\n    fifthBox: {\r\n        title: 'Customer Segments',\r\n        questions: ['Who is your customer?', 'What are their problems?\\n', `What's their age, location, job?\\n`, 'What competitor product are they using?\\n']\r\n    },\r\n    sixthBox: {\r\n        title: 'Key Resources',\r\n        questions: ['What physical, human, and financial resources does your business need?\\n', 'What assets do you need to produce and deliver your product?\\n', 'What resources to perform key activities and use channels?\\n']\r\n    },\r\n    seventhBox: {\r\n        title: 'Channels',\r\n        questions: ['How do you let your future customers know about your product?\\n', 'How do you make your product reach your customers?\\n', 'Which supply channels are you using?\\n', 'What comminication channels are you using?\\n']\r\n    },\r\n    eightBox: {\r\n        title: 'Cost Structure',\r\n        questions: ['What costs you have to cover to create and deliver your product?\\n', 'How much of your cost structure is allocated for development, marketing, and the stuff?\\n']\r\n    },\r\n    ninthBox: {\r\n        title: 'Revenue Streams',\r\n        questions: ['How is your business monetized?', 'What revenue models are you using?\\n', 'What is the pricing strategy?\\n', 'What payment channels are you using?\\n']\r\n    }\r\n}\r\n\r\nmodule.exports = Text","import { useEffect, useRef, useState } from 'react';\r\nimport { BiLink, BiUnlink } from 'react-icons/bi';\r\nimport { useGlobalState } from '../../Hooks/useGlobalState';\r\n\r\nconst limits = {\r\n    KeyPartnerships: 728,\r\n    KeyActivities: 364,\r\n    ValuePropositions: 728,\r\n    CustomerRelationships: 364,\r\n    CustomerSegments: 728,\r\n    Channels: 364,\r\n    KeyResources: 364,\r\n    RevenueStreams: 420,\r\n    CostStructure: 420,\r\n    BrainstormingNotes: 728\r\n}\r\n\r\nexport default function TextInputField({ setInpActive, objName }) {\r\n    const containerRef = useRef(null);\r\n    const [inpValue, setInpValue] = useState('');\r\n    const { dispatch, form } = useGlobalState();\r\n\r\n    const handleInput = (e) => {\r\n        const allowedTags = [\"i\", \"b\", \"a\"];\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(e.target.innerHTML, \"text/html\");\r\n        let validatedContent = \"\";\r\n\r\n        for (let node of doc.body.childNodes) {\r\n            if (node.nodeType === Node.TEXT_NODE) {\r\n                validatedContent += node.textContent;\r\n            } else if (allowedTags.includes(node.tagName.toLowerCase())) {\r\n                const attrs = Array.from(node.attributes)\r\n                    .map((attr) => `${attr.name}=\"${attr.value}\"`)\r\n                    .join(\" \");\r\n                validatedContent += `<${node.tagName.toLowerCase()} ${attrs}>${node.textContent}</${node.tagName.toLowerCase()}>`;\r\n            }\r\n        }\r\n        if (e.target.innerHTML.startsWith('&nbsp;')) {\r\n            setInpValue('');\r\n        } else {\r\n            const maxLength = 28;\r\n            validatedContent = validatedContent.replace(new RegExp(`(.{${maxLength}})`, 'g'), '$1\\n');\r\n            setInpValue(validatedContent);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleEnter = (e) => {\r\n            if (e.keyCode === 13) {\r\n                if (inpValue === '') {\r\n                    setInpActive(false);\r\n                } else {\r\n                    const objLen = form[objName].list.length\r\n                    const inpArr = [inpValue]\r\n                    const totalLen = objLen + inpArr.length\r\n                    const lim = limits[objName] / 28\r\n                    // console.log({ totalLen, lim });\r\n                    if (totalLen <= lim) {\r\n                        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: [...form[objName].list, inpValue] } } })\r\n                        setInpActive(false);\r\n                    } else {\r\n                        console.log(\"Inp => Limitation exceeded!\");\r\n                        setInpActive(false);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('keydown', handleEnter);\r\n\r\n        const handleEsc = (e) => {\r\n            if (e.keyCode === 27) {\r\n                setInpActive(false);\r\n            }\r\n        };\r\n        document.addEventListener('keydown', handleEsc);\r\n\r\n        function handleClickOutside(e) {\r\n            if (containerRef.current && !containerRef.current.contains(e.target)) {\r\n                if (inpValue === '') {\r\n                    setInpActive(false);\r\n                } else {\r\n                    const objLen = form[objName].list.length\r\n                    const inpArr = [inpValue]\r\n                    const totalLen = objLen + inpArr.length\r\n                    const lim = limits[objName] / 28\r\n                    // console.log({ totalLen, lim });\r\n                    if (totalLen <= lim) {\r\n                        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: [...form[objName].list, inpValue] } } })\r\n                        setInpActive(false);\r\n                    } else {\r\n                        console.log(\"Inp => Limitation exceeded!\");\r\n                        setInpActive(false);\r\n                    }\r\n                    // setText([...text, inpValue]);\r\n                    // setInpActive(false);\r\n                    // dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: [...form[objName].list, inpValue] } } })\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleEsc);\r\n            document.removeEventListener('keydown', handleEnter);\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [setInpActive, containerRef, inpValue, dispatch, objName, form]);\r\n\r\n    const handleFontStyle = (fontStyle) => {\r\n        document.execCommand(fontStyle, false, null);\r\n    };\r\n\r\n    const handleFontLink = (fontLink) => {\r\n        const links = prompt('Inset Link');\r\n\r\n        document.execCommand(fontLink, false, links);\r\n    };\r\n\r\n    const handleFontUnLink = (fontUnLink) => {\r\n        document.execCommand(fontUnLink, false, '');\r\n    };\r\n\r\n    const handlePaste = (e) => {\r\n        e.preventDefault();\r\n        var text = e.clipboardData.getData(\"text/plain\");\r\n        document.execCommand(\"insertHTML\", false, text);\r\n    };\r\n\r\n    return (\r\n        <div ref={containerRef}>\r\n            <div className='flex'>\r\n                <div\r\n                    role='textbox'\r\n                    title='Type a message'\r\n                    data-placeholder=\"Click here and type ...\"\r\n                    contentEditable={true}\r\n                    onClick={() => setInpActive(true)}\r\n                    onInput={handleInput}\r\n                    onPaste={handlePaste}\r\n                    className={`input_text_editor px-5 py-1 focus:border-none bg-gray-50 break-all w-full active:border-none outline-none`}\r\n                />\r\n            </div>\r\n            <div className='flex justify-center items-center border border-gray-500 rounded-md max-w-[150px] m-2 bg-white'>\r\n                <button\r\n                    onClick={() => handleFontStyle('bold')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\">\r\n                    B\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontStyle('italic')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\">\r\n                    i\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontLink('createLink')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\"\r\n                >\r\n                    <BiLink />\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontUnLink('unlink')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\"\r\n                >\r\n                    <BiUnlink />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { BiLink, BiUnlink } from 'react-icons/bi';\r\n// import { useGlobalState } from '../../Hooks/useGlobalState';\r\n\r\n// const limits = {\r\n//     KeyPartnerships: 728,\r\n//     KeyActivities: 364,\r\n//     ValuePropositions: 728,\r\n//     CustomerRelationships: 364,\r\n//     CustomerSegments: 728,\r\n//     Channels: 364,\r\n//     KeyResources: 364,\r\n//     RevenueStreams: 420,\r\n//     CostStructure: 420,\r\n//     BrainstormingNotes: 728\r\n// }\r\n\r\nexport default function EditInput({ handleEdit, index, setNewInpValue, valueToEdit, objName }) {\r\n    const containerRef = useRef(null)\r\n    const [inpValue, setInpValue] = useState('')\r\n    // const { form } = useGlobalState()\r\n\r\n    const handleInput = (e) => {\r\n        const allowedTags = [\"i\", \"b\", \"a\"];\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(e.target.innerHTML, \"text/html\");\r\n        let validatedContent = \"\";\r\n\r\n        for (let node of doc.body.childNodes) {\r\n            if (node.nodeType === Node.TEXT_NODE) {\r\n                validatedContent += node.textContent;\r\n            } else if (allowedTags.includes(node.tagName.toLowerCase())) {\r\n                const attrs = Array.from(node.attributes)\r\n                    .map((attr) => `${attr.name}=\"${attr.value}\"`)\r\n                    .join(\" \");\r\n                validatedContent += `<${node.tagName.toLowerCase()} ${attrs}>${node.textContent}</${node.tagName.toLowerCase()}>`;\r\n            }\r\n        }\r\n        if (e.target.innerHTML.startsWith('&nbsp;')) {\r\n            setInpValue('');\r\n        } else {\r\n            setInpValue(validatedContent);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleEnter = (e) => {\r\n            if (e.keyCode === 13) {\r\n                if (inpValue === '') {\r\n                    handleEdit(index, valueToEdit)\r\n                    setNewInpValue(false)\r\n                } else {\r\n                    handleEdit(index, inpValue)\r\n                    setNewInpValue(false)\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleEnter);\r\n\r\n        const handleEsc = (e) => {\r\n            if (e.keyCode === 27) {\r\n                setNewInpValue(false)\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleEsc);\r\n\r\n        function handleClickOutside(e) {\r\n            if (containerRef.current && !containerRef.current.contains(e.target)) {\r\n                if (inpValue === '') {\r\n                    // setInpActive(false)\r\n                    handleEdit(index, valueToEdit)\r\n                    setNewInpValue(false)\r\n                } else {\r\n                    // setInpActive(false)\r\n                    handleEdit(index, inpValue)\r\n                    setNewInpValue(false)\r\n                }\r\n            }\r\n        }\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', handleEsc);\r\n            window.removeEventListener('keydown', handleEnter);\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, [containerRef, inpValue, handleEdit, index, setNewInpValue, valueToEdit]);\r\n\r\n    const handleFontStyle = (fontStyle) => {\r\n        document.execCommand(fontStyle, false, null);\r\n    };\r\n\r\n    const handleFontLink = (fontLink) => {\r\n        const links = prompt(\"Inset Link\")\r\n        document.execCommand(fontLink, false, links);\r\n    };\r\n\r\n    const handleFontUnLink = (fontUnLink) => {\r\n        document.execCommand(fontUnLink, false, '');\r\n    };\r\n\r\n    const handlePaste = (e) => {\r\n        e.preventDefault();\r\n        var text = e.clipboardData.getData(\"text/plain\");\r\n        document.execCommand(\"insertHTML\", false, text);\r\n    };\r\n\r\n    return (\r\n        <div ref={containerRef}>\r\n            <div className='flex'>\r\n                <div\r\n                    role='textbox'\r\n                    title='Type a message'\r\n                    data-placeholder=\"Type here...\"\r\n                    contentEditable={true}\r\n                    // onClick={() => setInpActive(true)}\r\n                    onInput={handleInput}\r\n                    onPaste={handlePaste}\r\n                    className={`input_text_editor px-5 py-1 focus:border-none bg-gray-100 break-all w-full active:border-none outline-none`}\r\n                    dangerouslySetInnerHTML={{ __html: valueToEdit }}\r\n                />\r\n            </div>\r\n            <div className='flex justify-center items-center border border-gray-500 rounded-md max-w-[150px] m-2 bg-white'>\r\n                <button\r\n                    onClick={() => handleFontStyle('bold')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\">\r\n                    B\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontStyle('italic')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\">\r\n                    i\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontLink('createLink')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\"\r\n                >\r\n                    <BiLink />\r\n                </button>\r\n                <button\r\n                    onClick={() => handleFontUnLink('unlink')}\r\n                    className=\"flex justify-center items-center font-bold hover:bg-gray-200 text-xl h-10 w-10 rounded-md\"\r\n                >\r\n                    <BiUnlink />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport { RxDragHandleDots2 } from 'react-icons/rx'\r\nimport { RiDeleteBinLine, RiEditBoxLine } from 'react-icons/ri'\r\nimport EditInput from './EditInput'\r\nimport { useGlobalState } from '../../Hooks/useGlobalState'\r\n\r\n\r\nexport default function List({ value, handleEdit, index, objName, delVa }) {\r\n    const [newInpValue, setNewInpValue] = useState(false);\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const { dispatch, form } = useGlobalState();\r\n    // const [vals,] = useState(value.replace(\"\\n\", \"\"))\r\n\r\n    const handleDelete = (value) => {\r\n        const updatedList = form[objName].list.filter((partner) => partner !== value);\r\n        dispatch({\r\n            type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: updatedList } }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div\r\n            onDoubleClick={() => setNewInpValue(true)}>\r\n            {\r\n                newInpValue && <EditInput handleEdit={handleEdit} index={index} setNewInpValue={setNewInpValue} valueToEdit={value} objName={objName} />\r\n            }\r\n            {\r\n                !newInpValue && (\r\n                    <div className='flex items-center gap-3 justify-center px-2 cursor-pointer hover:bg-white'>\r\n                        <div\r\n                            className='hover:bg-slate-200 text-lg group relative'\r\n                            onClick={() => setShowMenu(!showMenu)}\r\n                        >\r\n                            <RxDragHandleDots2 />\r\n                            {\r\n                                showMenu && (\r\n                                    <div className={`absolute bg-white p-2 border shadow-2xl z-10 border-gray-300`}>\r\n                                        <ul>\r\n                                            <li\r\n                                                onClick={() => setNewInpValue(true)}\r\n                                                className='flex items-center gap-3 hover:bg-gray-200 hover:text-primary p-1 w-28 text-sm'>\r\n                                                <RiEditBoxLine />\r\n                                                Edit\r\n                                            </li>\r\n                                            <li\r\n                                                onClick={() => handleDelete(delVa)}\r\n                                                className='flex items-center gap-3 hover:bg-gray-200 hover:text-primary p-1 w-28 text-sm'>\r\n                                                <RiDeleteBinLine />\r\n                                                Delete\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        <div\r\n                            className='w-full break-all text-area'\r\n                            dangerouslySetInnerHTML={{ __html: value }}\r\n                        />\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport { BsExclamationLg } from 'react-icons/bs';\r\nimport TextInputField from './TextInputField';\r\nimport List from './List';\r\nimport { useGlobalState } from '../../Hooks/useGlobalState';\r\n\r\nconst limits = {\r\n    KeyPartnerships: 728,\r\n    KeyActivities: 364,\r\n    ValuePropositions: 728,\r\n    CustomerRelationships: 364,\r\n    CustomerSegments: 728,\r\n    Channels: 364,\r\n    KeyResources: 364,\r\n    RevenueStreams: 420,\r\n    CostStructure: 420,\r\n    BrainstormingNotes: 728\r\n}\r\n\r\nexport default function EditableDiv({ list, title, objName }) {\r\n    const [inpActive, setInpActive] = useState(false);\r\n    const { dispatch, form } = useGlobalState();\r\n\r\n    //save reference for dragItem and dragOverItem\r\n    const dragItem = useRef(null)\r\n    const dragOverItem = useRef(null)\r\n\r\n    //const handle drag sorting\r\n    const handleSort = () => {\r\n        //duplicate items\r\n        let _text = [...form[objName].list]\r\n\r\n        //remove and save the dragged item content\r\n        const draggedItemContent = _text.splice(dragItem.current, 1)[0]\r\n\r\n        //switch the position\r\n        _text.splice(dragOverItem.current, 0, draggedItemContent)\r\n\r\n        //reset the position ref\r\n        dragItem.current = null\r\n        dragOverItem.current = null\r\n\r\n        //update the actual array\r\n        // setText(_text)\r\n        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: _text } } })\r\n    }\r\n\r\n    const handleEdit = (index, newValue) => {\r\n        const newItems = [...form[objName].list];\r\n        newItems[index] = newValue;\r\n        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: newItems } } })\r\n    }\r\n\r\n    const handleTopPercentage = (objeName) => {\r\n        const maxLen = limits[objeName] / 28\r\n        const percentage = Math.floor(form[objeName].list.length / maxLen * 100)\r\n        return percentage\r\n    }\r\n    return (\r\n        <>\r\n            <div className='flex flex-col' >\r\n                <div className='flex items-center px-3 py-3'>\r\n                    <h2 className='text-lg font-medium'>{title}</h2>\r\n                    {\r\n                        (form[objName].list.length === 0) && (\r\n                            <>\r\n                                {\r\n                                    !inpActive && (\r\n                                        <button\r\n                                            onClick={() => setInpActive(true)}\r\n                                            className='py-3 text-primary font-semibold flex items-center text-lg hover:text-opacity-60 cursor-pointer ml-auto'>\r\n                                            <h3 className='flex items-center gap-1 justify-center'>\r\n                                                <span>+</span>\r\n                                                Add\r\n                                            </h3>\r\n                                        </button>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        )\r\n                    }\r\n                    {\r\n                        (form[objName].list.length > 0 || inpActive) ? (\r\n                            <div\r\n                                title={list}\r\n                                className=\"bg-secondary h-7 w-7 rounded-full text-lg cursor-pointer ml-auto flex justify-center items-center text-white\">\r\n                                <BsExclamationLg className='text-lg' />\r\n                            </div>\r\n                        ) : null\r\n                    }\r\n                </div>\r\n                <div className='px-4'>\r\n                    {\r\n                        (form[objName].list !== \"\" || form[objName].list !== null) && (\r\n                            form[objName].list?.map((value, index) => {\r\n                                // value = value.replace(/\\n/g, \"\");\r\n                                return (\r\n                                    <div\r\n                                        draggable\r\n                                        onDragStart={(e) => (dragItem.current = index)}\r\n                                        onDragEnter={(e) => (dragOverItem.current = index)}\r\n                                        onDragEnd={handleSort}\r\n                                        onDragOver={(e) => e.preventDefault()}\r\n                                        key={index}\r\n                                    >\r\n                                        <List\r\n                                            value={value.replace(/\\n/g, \"\")}\r\n                                            delVa={value}\r\n                                            handleEdit={handleEdit}\r\n                                            index={index}\r\n                                            objName={objName}\r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        )\r\n                    }\r\n                </div>\r\n                <div>\r\n                    {\r\n                        (!inpActive) && (\r\n                            (form[objName].list.length === 0) ? (\r\n                                <p className='px-4 text-base text-secondary'>\r\n                                    {\r\n                                        list?.map((list, index) => (\r\n                                            <React.Fragment key={index}>\r\n                                                {list}\r\n                                                < br />\r\n                                            </React.Fragment>\r\n                                        ))\r\n                                    }\r\n                                </p>\r\n                            ) : <div\r\n                                onClick={() => setInpActive(true)}\r\n                                className={`${handleTopPercentage(objName) === 100 ? \"hidden\" : \"block\"} px-5 py-3 text-primary font-semibold flex items-center text-lg hover:text-opacity-60 cursor-pointer`}>\r\n                                <h3>\r\n                                    <span>+</span>\r\n                                    Add More\r\n                                </h3>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            {\r\n                inpActive && <TextInputField\r\n                    setInpActive={setInpActive}\r\n                    objName={objName}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n}\r\n","import React, { useRef, useState } from 'react'\r\nimport { useGlobalState } from '../../Hooks/useGlobalState';\r\nimport List from './List';\r\nimport TextInputField from './TextInputField';\r\n\r\nexport default function BrainstormingSec({ objName }) {\r\n    const [input, setInput] = useState(false)\r\n    const { dispatch, form } = useGlobalState();\r\n\r\n    //save reference for dragItem and dragOverItem\r\n    const dragItem = useRef(null)\r\n    const dragOverItem = useRef(null)\r\n\r\n    //const handle drag sorting\r\n    const handleSort = () => {\r\n        //duplicate items\r\n        let _text = [...form[objName].list]\r\n\r\n        //remove and save the dragged item content\r\n        const draggedItemContent = _text.splice(dragItem.current, 1)[0]\r\n\r\n        //switch the position\r\n        _text.splice(dragOverItem.current, 0, draggedItemContent)\r\n\r\n        //reset the position ref\r\n        dragItem.current = null\r\n        dragOverItem.current = null\r\n\r\n        //update the actual array\r\n        // setText(_text)\r\n        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: _text } } })\r\n    }\r\n\r\n    const handleEdit = (index, newValue) => {\r\n        const newItems = [...form[objName].list];\r\n        newItems[index] = newValue;\r\n        dispatch({ type: \"UPDATEFORM\", payload: { ...form, [objName]: { list: newItems } } })\r\n    }\r\n    return (\r\n        <div className='border-2 border-gray-300 min-h-52 p-5'>\r\n            <div className='hover:text-opacity-60'>\r\n                {\r\n                    (form[objName].list.length === 0) && (\r\n                        !input && (\r\n                            <h1\r\n                                className='text-2xl text-primary font-medium cursor-pointer'\r\n                                onClick={() => setInput(!input)}\r\n                            >\r\n                                <span>+</span>\r\n                                Add Business Notes Here\r\n                            </h1>\r\n                        )\r\n                    )\r\n                }\r\n                {\r\n                    (form[objName].list !== \"\" || form[objName].list !== null) && (\r\n                        form[objName].list?.map((value, index) => (\r\n                            <div\r\n                                draggable\r\n                                onDragStart={(e) => (dragItem.current = index)}\r\n                                onDragEnter={(e) => (dragOverItem.current = index)}\r\n                                onDragEnd={handleSort}\r\n                                onDragOver={(e) => e.preventDefault()}\r\n                                key={index}\r\n                            >\r\n                                <List\r\n                                    value={value}\r\n                                    handleEdit={handleEdit}\r\n                                    index={index}\r\n                                    objName={objName}\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    )\r\n                }\r\n                {\r\n                    (!input) && (\r\n                        (form[objName].list.length === 0) ? null : <div\r\n                            onClick={() => setInput(true)}\r\n                            className='px-5 py-3 text-primary font-semibold flex items-center text-lg hover:text-opacity-60 cursor-pointer'>\r\n                            <h3>\r\n                                <span>+</span>\r\n                                Add More\r\n                            </h3>\r\n                        </div>\r\n                    )\r\n                }\r\n                {\r\n                    input && (\r\n                        <TextInputField\r\n                            setInpActive={setInput}\r\n                            objName={objName}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Document, Page, Text, View, StyleSheet, Font, Link } from '@react-pdf/renderer';\r\nimport RobotoRegular from '../../Utils/fonts/Roboto-Regular.ttf'\r\nimport RobotoBold from '../../Utils/fonts/Roboto-Bold.ttf'\r\nimport RobotoItalic from '../../Utils/fonts/Roboto-Italic.ttf'\r\nimport RobotoBoldItalic from '../../Utils/fonts/Roboto-BoldItalic.ttf'\r\n\r\nFont.register({\r\n    family: \"Roboto\",\r\n    format: \"truetype\",\r\n    fonts: [\r\n        // { src: RobotoBlack }, // normal\r\n        { src: RobotoBold },\r\n        { src: RobotoItalic }, // bold\r\n        { src: RobotoBoldItalic } // bold\r\n    ]\r\n})\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n    page: {\r\n        // flexDirection: 'column',\r\n        backgroundColor: '#fff',\r\n        // fontFamily: \"Roboto\"\r\n    },\r\n    invoiceDateContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        margin: 20\r\n    },\r\n    label: {\r\n        fontSize: 48,\r\n        // fontFamily: \"Roboto\"\r\n    },\r\n    tableContainer: {\r\n        flexDirection: \"row\",\r\n        flexWrap: 'wrap',\r\n        // marginTop: 80,\r\n        marginLeft: 30,\r\n        marginBottom: 20,\r\n        // marginLeft: -525,\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: 1150\r\n    },\r\n    firstRow: {\r\n        // flexDirection: 'row',\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: 230,\r\n        height: 500,\r\n        borderLeft: \"none\",\r\n        borderTop: \"none\",\r\n        // whiteSpace: \"pre-wrap\"\r\n    },\r\n    firstRowInner: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: 230,\r\n        height: 250,\r\n        borderLeft: \"none\",\r\n        borderTop: \"none\",\r\n        borderRight: \"none\"\r\n    },\r\n    firstRowLastCol: {\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: 228,\r\n        borderLeft: \"none\",\r\n        borderTop: \"none\",\r\n        borderRight: \"none\"\r\n    },\r\n    secRow: {\r\n        flexDirection: 'column',\r\n        flexWrap: 'wrap',\r\n        borderWidth: 1,\r\n        borderColor: '#333',\r\n        width: 574,\r\n        height: 200,\r\n        borderLeft: \"none\",\r\n        borderTop: \"none\",\r\n        borderBottom: \"none\"\r\n    },\r\n    borderRightNone: {\r\n        border: \"none\"\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n        marginHorizontal: 5,\r\n        marginVertical: 3,\r\n        fontFamily: \"Roboto\",\r\n        fontWeight: \"normal\",\r\n        // width: 230,\r\n        // overflow: \"hidden\"\r\n    },\r\n    container: {\r\n        // backgroundColor: \"red\",\r\n        width: '100%',\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        height: '80px'\r\n    },\r\n    name: {\r\n        marginRight: 20,\r\n        marginTop: 20\r\n    },\r\n    date: {\r\n        marginRight: 20,\r\n        // marginTop: 20\r\n    }\r\n});\r\n\r\nexport default function BMCPdf({ form, canvas_name }) {\r\n    const date = new Date().toLocaleDateString()\r\n\r\n    const handleTag = (list) => {\r\n        let ele = { bold: \"\", italic: \"\", link: \"\", src: null, text: \"\" }\r\n        let parser = new DOMParser();\r\n        let htmlDoc = parser.parseFromString(list, 'text/html')\r\n        let bold = htmlDoc.getElementsByTagName('b');\r\n        let italic = htmlDoc.getElementsByTagName('i');\r\n        let link = htmlDoc.getElementsByTagName('a');\r\n\r\n        for (let i = 0; i < link.length; i++) {\r\n            const element = link[i];\r\n            ele.link = true\r\n            ele.src = element.getAttribute('href')\r\n            ele.text = element.innerText.replace(\"\\n\",\"\")\r\n        }\r\n\r\n        for (let i = 0; i < bold.length; i++) {\r\n            const element = bold[i];\r\n            ele.bold = true\r\n            ele.text = element.textContent.replace(\"\\n\",\"\")\r\n        }\r\n\r\n        for (let i = 0; i < italic.length; i++) {\r\n            const element = italic[i];\r\n            ele.italic = true\r\n            ele.text = element.textContent.replace(\"\\n\",\"\")\r\n        }\r\n        if ((bold.length < 1) && (italic.length < 1) && (link.length < 1)) {\r\n            ele.text += list;\r\n        }\r\n        // console.log(ele);\r\n        return ele\r\n    }\r\n\r\n    const blankRows = Array(form)\r\n    const data = blankRows.map((list, index) => (\r\n        <View style={styles.tableContainer} key={index}>\r\n            <View style={styles.firstRow}>\r\n                <Text style={styles.title}>Key Partnerships</Text>\r\n                {\r\n                    list.KeyPartnerships.list.map((list, index) => {\r\n                        const ele = handleTag(list)\r\n                        Font.register({\r\n                            family: \"Roboto-Regular\",\r\n                            format: \"truetype\",\r\n                            src: RobotoRegular\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBold\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoItalic\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBoldItalic\r\n                        })\r\n                        const classStyle = StyleSheet.create({\r\n                            list: {\r\n                                flexDirection: \"row\",\r\n                                fontSize: 12,\r\n                                marginHorizontal: 10,\r\n                                width: 230,\r\n                                fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                            }\r\n                        })\r\n                        return (ele.link) ?\r\n                            <Link\r\n                                src={ele.src}\r\n                                style={classStyle.list} key={index} >\r\n                                {ele.text}\r\n                            </Link>\r\n                            :\r\n                            <Text\r\n                                style={classStyle.list} key={index} >{ele.text}</Text>\r\n                    })\r\n                }\r\n            </View>\r\n            <View style={styles.firstRow}>\r\n                <View style={styles.firstRowInner}>\r\n                    <Text style={styles.title}>Key Activities</Text>\r\n                    {\r\n                        list.KeyActivities.list.map((list, index) => {\r\n                            const ele = handleTag(list)\r\n                            Font.register({\r\n                                family: \"Roboto-Regular\",\r\n                                format: \"truetype\",\r\n                                src: RobotoRegular\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBold\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoItalic\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBoldItalic\r\n                            })\r\n                            const classStyle = StyleSheet.create({\r\n                                list: {\r\n                                    fontSize: 12,\r\n                                    marginHorizontal: 10,\r\n                                    width: 230,\r\n                                    fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                }\r\n                            })\r\n                            return (ele.link) ?\r\n                                <Link\r\n                                    src={ele.src}\r\n                                    style={classStyle.list} key={index} >\r\n                                    {ele.text}\r\n                                </Link>\r\n                                :\r\n                                <Text\r\n                                    style={classStyle.list} key={index} >\r\n                                    {ele.text}\r\n                                </Text>\r\n                        })\r\n                    }\r\n                </View>\r\n                <View style={styles.firstRowInner}>\r\n                    <Text style={styles.title}>Key Resources</Text>\r\n                    {\r\n                        list.KeyResources.list.map((list, index) => {\r\n                            const ele = handleTag(list)\r\n                            Font.register({\r\n                                family: \"Roboto-Regular\",\r\n                                format: \"truetype\",\r\n                                src: RobotoRegular\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBold\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoItalic\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBoldItalic\r\n                            })\r\n                            const classStyle = StyleSheet.create({\r\n                                list: {\r\n                                    fontSize: 12,\r\n                                    marginHorizontal: 10,\r\n                                    width: 230,\r\n                                    fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                    // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                                }\r\n                            })\r\n                            return (ele.link) ?\r\n                                <Link\r\n                                    src={ele.src}\r\n                                    style={classStyle.list} key={index} >\r\n                                    {ele.text}\r\n                                </Link>\r\n                                :\r\n                                <Text\r\n                                    style={classStyle.list} key={index} >{ele.text}</Text>\r\n                        })\r\n                    }\r\n                </View>\r\n            </View>\r\n            <View style={styles.firstRow}>\r\n                <Text style={styles.title}> Value Propositions</Text>\r\n                {\r\n                    list.ValuePropositions.list.map((list, index) => {\r\n                        const ele = handleTag(list)\r\n                        Font.register({\r\n                            family: \"Roboto-Regular\",\r\n                            format: \"truetype\",\r\n                            src: RobotoRegular\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBold\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoItalic\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBoldItalic\r\n                        })\r\n                        const classStyle = StyleSheet.create({\r\n                            list: {\r\n                                fontSize: 12,\r\n                                marginHorizontal: 10,\r\n                                width: 230,\r\n                                fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\",\r\n                                // whiteSpace: \"pre-wrap\"\r\n                                // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                            }\r\n                        })\r\n                        return (ele.link) ?\r\n                            <Link\r\n                                src={ele.src}\r\n                                style={classStyle.list} key={index} >\r\n                                {ele.text}\r\n                            </Link>\r\n                            :\r\n                            <Text\r\n                                style={classStyle.list} key={index} >{ele.text}</Text>\r\n                    })\r\n                }\r\n            </View>\r\n            <View style={styles.firstRow}>\r\n                <View style={styles.firstRowInner}>\r\n                    <Text style={styles.title}> Customer Relationships</Text>\r\n                    {\r\n                        list.CustomerRelationships.list.map((list, index) => {\r\n                            const ele = handleTag(list)\r\n                            Font.register({\r\n                                family: \"Roboto-Regular\",\r\n                                format: \"truetype\",\r\n                                src: RobotoRegular\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBold\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoItalic\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBoldItalic\r\n                            })\r\n                            const classStyle = StyleSheet.create({\r\n                                list: {\r\n                                    fontSize: 12,\r\n                                    marginHorizontal: 10,\r\n                                    width: 230,\r\n                                    fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                    // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                                }\r\n                            })\r\n                            return (ele.link) ?\r\n                                <Link\r\n                                    src={ele.src}\r\n                                    style={classStyle.list} key={index} >\r\n                                    {ele.text}\r\n                                </Link>\r\n                                :\r\n                                <Text\r\n                                    style={classStyle.list} key={index} >{ele.text}</Text>\r\n                        })\r\n                    }\r\n                </View>\r\n                <View style={styles.firstRowInner}>\r\n                    <Text style={styles.title}> Channels</Text>\r\n                    {\r\n                        list.Channels.list.map((list, index) => {\r\n                            const ele = handleTag(list)\r\n                            Font.register({\r\n                                family: \"Roboto-Regular\",\r\n                                format: \"truetype\",\r\n                                src: RobotoRegular\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBold\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoItalic\r\n                            })\r\n                            Font.register({\r\n                                family: \"Roboto-Bold-Italic\",\r\n                                format: \"truetype\",\r\n                                src: RobotoBoldItalic\r\n                            })\r\n                            const classStyle = StyleSheet.create({\r\n                                list: {\r\n                                    fontSize: 12,\r\n                                    marginHorizontal: 10,\r\n                                    width: 230,\r\n                                    fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                    // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                                }\r\n                            })\r\n                            return (ele.link) ?\r\n                                <Link\r\n                                    src={ele.src}\r\n                                    style={classStyle.list} key={index} >\r\n                                    {ele.text}\r\n                                </Link>\r\n                                :\r\n                                <Text\r\n                                    style={classStyle.list} key={index} >{ele.text}</Text>\r\n                        })\r\n                    }\r\n                </View>\r\n            </View>\r\n            <View style={styles.firstRowLastCol}>\r\n                <Text style={styles.title}>Customer Segments</Text>\r\n                {\r\n                    list.CustomerSegments.list.map((list, index) => {\r\n                        const ele = handleTag(list)\r\n                        Font.register({\r\n                            family: \"Roboto-Regular\",\r\n                            format: \"truetype\",\r\n                            src: RobotoRegular\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBold\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoItalic\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBoldItalic\r\n                        })\r\n                        const classStyle = StyleSheet.create({\r\n                            list: {\r\n                                fontSize: 12,\r\n                                marginHorizontal: 10,\r\n                                width: 230,\r\n                                fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                            }\r\n                        })\r\n                        return (ele.link) ?\r\n                            <Link\r\n                                src={ele.src}\r\n                                style={classStyle.list} key={index} >\r\n                                {ele.text}\r\n                            </Link>\r\n                            :\r\n                            <Text\r\n                                style={classStyle.list} key={index} >{ele.text}</Text>\r\n                    })\r\n                }\r\n            </View>\r\n            <View style={styles.secRow}>\r\n                <Text style={styles.title}>Cost Structure</Text>\r\n                {\r\n                    list.CostStructure.list.map((list, index) => {\r\n                        const ele = handleTag(list)\r\n                        Font.register({\r\n                            family: \"Roboto-Regular\",\r\n                            format: \"truetype\",\r\n                            src: RobotoRegular\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBold\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoItalic\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBoldItalic\r\n                        })\r\n                        const classStyle = StyleSheet.create({\r\n                            list: {\r\n                                fontSize: 12,\r\n                                marginHorizontal: 10,\r\n                                width: 230,\r\n                                fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                            }\r\n                        })\r\n                        return (ele.link) ?\r\n                            <Link\r\n                                src={ele.src}\r\n                                style={classStyle.list} key={index} >\r\n                                {ele.text}\r\n                            </Link>\r\n                            :\r\n                            <Text\r\n                                style={classStyle.list} key={index} >{ele.text}</Text>\r\n                    })\r\n                }\r\n            </View>\r\n            <View style={styles.borderRightNone}>\r\n                <Text style={styles.title}>Revenue Streams</Text>\r\n                {\r\n                    list.RevenueStreams.list.map((list, index) => {\r\n                        const ele = handleTag(list)\r\n                        Font.register({\r\n                            family: \"Roboto-Regular\",\r\n                            format: \"truetype\",\r\n                            src: RobotoRegular\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBold\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoItalic\r\n                        })\r\n                        Font.register({\r\n                            family: \"Roboto-Bold-Italic\",\r\n                            format: \"truetype\",\r\n                            src: RobotoBoldItalic\r\n                        })\r\n                        const classStyle = StyleSheet.create({\r\n                            list: {\r\n                                fontSize: 12,\r\n                                marginHorizontal: 10,\r\n                                width: 230,\r\n                                fontFamily: (ele.bold) ? \"Roboto-Bold\" : (ele.italic) ? \"Roboto-Italic\" : \"Roboto-Regular\"\r\n                                // fontWeight: ele.bold ? \"normal\" ? (ele.italic) : \"bold\" : null\r\n                            }\r\n                        })\r\n                        return (ele.link) ?\r\n                            <Link\r\n                                src={ele.src}\r\n                                style={classStyle.list} key={index} >\r\n                                {ele.text}\r\n                            </Link>\r\n                            :\r\n                            <Text\r\n                                style={classStyle.list} key={index} >{ele.text}</Text>\r\n                    })\r\n                }\r\n            </View>\r\n        </View>\r\n    ))\r\n\r\n    return (\r\n        <Document title='PDF_CHECK'>\r\n            <Page size=\"A3\" orientation='landscape' style={styles.page}>\r\n                <View style={styles.invoiceDateContainer}>\r\n                    <Text style={styles.label}>Business Model Canvas</Text>\r\n                    <View>\r\n                        <Text style={styles.name}>Canvas Name: {canvas_name}</Text>\r\n                        <Text style={styles.date}>Date: {date}</Text>\r\n                    </View>\r\n                </View >\r\n                {data}\r\n            </Page>\r\n        </Document>\r\n    )\r\n}\r\n","import { useGlobalState } from \"../../Hooks/useGlobalState\";\r\n\r\nconst limits = {\r\n    KeyPartnerships: 728,\r\n    KeyActivities: 364,\r\n    ValuePropositions: 728,\r\n    CustomerRelationships: 364,\r\n    CustomerSegments: 728,\r\n    Channels: 364,\r\n    KeyResources: 364,\r\n    RevenueStreams: 420,\r\n    CostStructure: 420,\r\n    BrainstormingNotes: 728\r\n}\r\n\r\nexport default function Percentage({ objName }) {\r\n    const { form } = useGlobalState();\r\n\r\n    const handleTopPercentage = (objeName) => {\r\n        const maxLen = limits[objeName] / 28\r\n        const percentage = Math.floor(form[objeName].list.length / maxLen * 100)\r\n        return percentage\r\n    }\r\n    return form[objName].list.length > 0 && (\r\n        <div className='relative w-full bg-secondary h-1 flex mb-2'>\r\n            <div className='absolute bg-primary h-1' style={{ width: `${(handleTopPercentage(objName) > 100 ? \"100%\" : handleTopPercentage(objName))}%` }}></div>\r\n            {\r\n                handleTopPercentage(objName) >= 100 ? null : <span className='ml-auto m-2 text-xs'>{100 - handleTopPercentage(objName)}% Left</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport Text from '../Utils/Text';\r\nimport { BiDownload } from \"react-icons/bi\";\r\nimport React, { Suspense, useEffect, useState } from 'react';\r\nimport { useGlobalState } from \"../Hooks/useGlobalState\";\r\nimport EditableDiv from '../components/BMCModule/EditableDiv';\r\nimport BrainstormingSec from '../components/BMCModule/BrainstormingSec';\r\n// import { PDFViewer } from '@react-pdf/renderer';\r\nimport { PDFDownloadLink } from '@react-pdf/renderer';\r\nimport BMCPdf from '../components/PDFReports.jsx/BMCPdf';\r\nimport Percentage from '../components/BMCModule/Percentage';\r\nimport Cookies from 'js-cookie';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Footer from '../components/Footer';\r\n\r\nexport default function BMCModule() {\r\n    const { form, dispatch, user, canvas_name } = useGlobalState();\r\n    // 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 (Access token of github)\r\n    const [confirm, setConfirm] = useState(false);\r\n    // const [page, setPage] = useState(1);\r\n    // const [length, setLength] = useState(null);\r\n    const [canvas, setCanvas] = useState([]);\r\n    const [canvasName, setCanvasName] = useState('');\r\n    const [id, setId] = useState('Select Canvas');\r\n    const [canvasLoading, setCanvasLoading] = useState(false);\r\n    const token = Cookies.get('sodIdToken');\r\n\r\n    const handlePostForm = async () => {\r\n        if (id === 'Select Canvas') {\r\n            try {\r\n                if (canvasName.length > 0) {\r\n                    await axios.post(`${process.env.REACT_APP_API}/save-canvas`, { google_id: user.data.google_id, canvas_name: canvasName, canvas: form }, {\r\n                        headers: {\r\n                            \"ngrok-skip-browser-warning\": true,\r\n                            \"Authorization\": `Bearer ${token}`\r\n                        }\r\n                    })\r\n                    toast.success(`Canvas Posted Successfully`, {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: true,\r\n                        theme: \"colored\",\r\n                    });\r\n                    setId(null)\r\n                    dispatch({ type: \"RESET_STATE\" })\r\n                    // console.log(\"sdf\");\r\n                } else {\r\n                    toast.error(`Give the Name of Canvas`, {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: true,\r\n                        theme: \"colored\",\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                if (err.response.data) {\r\n                    toast.error(err.response.data.message, {\r\n                        position: \"bottom-right\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: true,\r\n                        theme: \"colored\",\r\n                    });\r\n                }\r\n                // console.log({ google_id: user.data.google_id, canvas_name: canvasName, canvas: form });\r\n                console.log(err);\r\n            }\r\n        } else {\r\n            try {\r\n                const resp = await axios.post(`${process.env.REACT_APP_API}/update-canvas`, { google_id: user.data.google_id, canvas_name: id, canvas: form }, {\r\n                    headers: {\r\n                        \"ngrok-skip-browser-warning\": true,\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                })\r\n                toast.success(resp.data.message, {\r\n                    position: \"bottom-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: true,\r\n                    theme: \"colored\",\r\n                });\r\n                // console.log(resp.data.message);\r\n                // console.log(form);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            const resp = await axios.post(`${process.env.REACT_APP_API}/delete-canvas`, { canvas_name: id }, {\r\n                headers: {\r\n                    \"ngrok-skip-browser-warning\": true,\r\n                    \"Authorization\": `Bearer ${token}`\r\n                }\r\n            })\r\n            dispatch({ type: \"RESET_STATE\" })\r\n            setId('Select Canvas')\r\n            toast.success(\"Canvas Deleted\", {\r\n                position: \"bottom-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: true,\r\n                theme: \"colored\",\r\n            });\r\n            console.log(resp.data.message);\r\n            setConfirm(false)\r\n            // console.log(form);\r\n        } catch (err) {\r\n            console.log(err);\r\n            setConfirm(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const { data } = await axios.get(`${process.env.REACT_APP_API}/get-canvas-names`, {\r\n                    headers: {\r\n                        \"ngrok-skip-browser-warning\": true,\r\n                        \"Authorization\": `Bearer ${token}`\r\n                    }\r\n                })\r\n                setCanvas(data.data);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData()\r\n        // console.log(user);\r\n    }, [id, token])\r\n\r\n    useEffect(() => {\r\n        const getCanvas = async () => {\r\n            setCanvasLoading(true)\r\n            try {\r\n                let canvas_name = id\r\n                const data = await axios.post(`${process.env.REACT_APP_API}/get-canvas`, { 'canvas_name': canvas_name }, {\r\n                    headers: {\r\n                        \"ngrok-skip-browser-warning\": true,\r\n                        \"Authorization\": `Bearer ${token}`,\r\n                        \"Access-Control-Allow-Origin\": \"*\"\r\n                    }\r\n                })\r\n                dispatch({ type: \"UPDATEFORM\", payload: data.data.data.canvas })\r\n                dispatch({ type: \"UPDATECANVASNAME\", payload: data.data.data.canvas_name })\r\n                // console.log(\"Data\", data.data.data.canvas_name);\r\n                // console.log(\"state\", canvas_name);\r\n                setCanvasLoading(false)\r\n            } catch (err) {\r\n                console.log(\"get Canvas Err\", err);\r\n                setCanvasLoading(false)\r\n            }\r\n        }\r\n        if (id !== \"Select Canvas\") {\r\n            getCanvas()\r\n        }\r\n    }, [id, dispatch, token])\r\n\r\n    const handleCreateNewForm = () => {\r\n        setId('Select Canvas')\r\n        setCanvasName('')\r\n        dispatch({ type: \"RESET_STATE\" })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='px-2 2xl:px-24 xl:px-24 lg:px-24 md:px-16 py-10'>\r\n\r\n                <div className='hidden 2xl:flex xl:flex lg:flex md:hidden my-5 gap-4 btn:flex-col flex-col 2xl:flex-row xl:flex-row lg:flex-col md:flex-col sm:flex-col xs:flex-col'>\r\n                    <div className='flex gap-5 items-center'>\r\n                        <h3\r\n                            className={`${(id === \"Select Canvas\") ? \"border-b-2 border-primary text-primary\" : \"text-secondary\"} text-xl hover:text-primary font-medium cursor-pointer hover:border-b-2 hover:border-primary`}\r\n                            onClick={handleCreateNewForm}>\r\n                            Create BMC\r\n                        </h3>\r\n                        <select name=\"canvas\" className='w-52 border px-5 py-2' value={id} onChange={(e) => setId(e.target.value)}>\r\n                            <option selected disabled value={'Select Canvas'}>Select Canvas</option>\r\n                            {\r\n                                canvas && canvas.map((canvasName, index) => (\r\n                                    <option value={canvasName.canvas_name} key={index}>{canvasName.canvas_name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className='flex ml-auto gap-3'>\r\n                        {\r\n                            !confirm ? (\r\n                                <>\r\n                                    <div className='w-72'>\r\n                                        <input type=\"text\" name=\"Canvas\" value={canvasName} placeholder='Type in the name of canvas' className='w-full px-5 py-3 border' required onChange={(e) => setCanvasName(e.target.value)} />\r\n                                    </div>\r\n                                    <PDFDownloadLink document={\r\n                                        <Suspense fallback={<LoadingBtn />}>\r\n                                            <BMCPdf form={form} canvas_name={canvas_name} />\r\n                                        </Suspense>\r\n                                    } fileName={id} className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                        <BiDownload className=\"text-xl\" />\r\n                                        Download\r\n                                    </PDFDownloadLink>\r\n                                    <button\r\n                                        onClick={handlePostForm}\r\n                                        className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                        Save Template\r\n                                    </button>\r\n                                    {\r\n                                        (id === 'Select Canvas') ? <></> : (\r\n                                            <button\r\n                                                // onClick={handleDelete}\r\n                                                onClick={() => setConfirm(true)}\r\n                                                className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                                Delete Canvas\r\n                                            </button>\r\n                                        )\r\n                                    }\r\n                                </>\r\n                            ) : (\r\n                                (id === 'Select Canvas') ? <></> : (\r\n                                    <>\r\n                                        <button\r\n                                            onClick={handleDelete}\r\n                                            // onClick={() => setConfirm(true)}\r\n                                            className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                            Yes, Delete Canvas\r\n                                        </button>\r\n                                        <button\r\n                                            // onClick={handleDelete}\r\n                                            onClick={() => setConfirm(false)}\r\n                                            className=\"border-primary border text-primary p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                            No, Keep Canvas\r\n                                        </button>\r\n                                    </>\r\n                                )\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='flex 2xl:hidden xl:hidden lg:hidden md:flex my-5 gap-4 btn:flex-col flex-col 2xl:flex-row xl:flex-row lg:flex-col md:flex-col sm:flex-col xs:flex-col'>\r\n                    <div className='flex gap-5 justify-center'>\r\n                        <h3\r\n                            className={`${(id === \"Select Canvas\") ? \"border-b-2 border-primary\" : \"\"} text-xl text-secondary hover:text-primary font-medium cursor-pointer hover:border-b-2 hover:border-primary`}\r\n                            onClick={handleCreateNewForm}>\r\n                            Create BMC\r\n                        </h3>\r\n                        <select name=\"canvas\" className='w-52 border px-5' value={id} onChange={(e) => setId(e.target.value)}>\r\n                            <option selected disabled value={'Select Canvas'}>Select Canvas</option>\r\n                            {\r\n                                canvas && canvas.map((canvasName, index) => (\r\n                                    <option value={canvasName.canvas_name} key={index}>{canvasName.canvas_name}</option>\r\n                                ))\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className='flex ml-auto gap-3 justify-center w-full'>\r\n                        <div className='w-full'>\r\n                            <input type=\"text\" name=\"Canvas\" value={canvasName} placeholder='Type in the name of canvas' className='w-full px-5 py-3 border' required onChange={(e) => setCanvasName(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='flex gap-5 justify-center flex-col 2xl:flex-row xl:flex-row lg:flex-row md:flex-row sm:flex-row xs:flex-col'>\r\n                        <PDFDownloadLink document={\r\n                            <Suspense fallback={<LoadingBtn />}>\r\n                                <BMCPdf form={form} />\r\n                            </Suspense>\r\n                        } fileName={id} className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                            <BiDownload className=\"text-xl\" />\r\n                            Download\r\n                        </PDFDownloadLink>\r\n                        <button\r\n                            onClick={handlePostForm}\r\n                            className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                            Save Template\r\n                        </button>\r\n                        {\r\n                            (id === 'Select Canvas') ? <></> : (\r\n                                <button\r\n                                    onClick={handleDelete}\r\n                                    className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                                    Delete Canvas\r\n                                </button>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='grid grid-cols-1 lg:grid-cols-5 grid-rows-4 border-2 border-gray-300'>\r\n                    {\r\n                        !canvasLoading ? (\r\n                            <>\r\n                                {/* KeyPartnerships - box */}\r\n                                <div className=' flex flex-col lg:row-span-2 lg:col-span-1 2xl:border-r-2 xl:border-r-2 lg:border-r-2  border-r-0 border-b-2 border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'KeyPartnerships'} />\r\n                                    <EditableDiv list={Text.firstBox.questions} title={Text.firstBox.title} objName={'KeyPartnerships'} />\r\n                                </div>\r\n                                {/* KeyActivities - box */}\r\n                                <div className='flex flex-col lg:border-r-2 lg:border-b-2 border-b-2 lg:border-gray-300 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'KeyActivities'} />\r\n                                    <EditableDiv list={Text.secondBox.questions} title={Text.secondBox.title} objName={'KeyActivities'} />\r\n                                </div>\r\n                                {/* ValuePropositions - box */}\r\n                                <div className='flex flex-col lg:row-span-2 lg:border-r-2 lg:border-b-2 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'ValuePropositions'} />\r\n                                    <EditableDiv list={Text.thirdBox.questions} title={Text.thirdBox.title} objName={'ValuePropositions'} />\r\n                                </div>\r\n                                {/* CustomerRelationships - box */}\r\n                                <div className='flex flex-col lg:border-r-2 lg:border-b-2 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'CustomerRelationships'} />\r\n                                    <EditableDiv list={Text.forthBox.questions} title={Text.forthBox.title} objName={'CustomerRelationships'} />\r\n                                </div>\r\n                                {/* CustomerSegments - box */}\r\n                                <div className='flex flex-col lg:row-span-2 lg:border-b-2 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'CustomerSegments'} />\r\n                                    <EditableDiv list={Text.fifthBox.questions} title={Text.fifthBox.title} objName={'CustomerSegments'} />\r\n                                </div>\r\n                                {/* KeyResources - box */}\r\n                                <div className='flex flex-col lg:border-b-2 lg:border-r-2 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'KeyResources'} />\r\n                                    <EditableDiv list={Text.sixthBox.questions} title={Text.sixthBox.title} objName={'KeyResources'} />\r\n                                </div>\r\n                                {/* Channels - box */}\r\n                                <div className='flex flex-col lg:border-r-2 lg:border-b-2 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'Channels'} />\r\n                                    <EditableDiv list={Text.seventhBox.questions} title={Text.seventhBox.title} objName={'Channels'} />\r\n                                </div>\r\n                                {/* CostStructure - box */}\r\n                                <div className='flex flex-col lg:row-span-2 lg:col-span-2 lg:border-r-2 2xl:border-b-0 xl:border-b-0 lg:border-b-0 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'CostStructure'} />\r\n                                    <EditableDiv list={Text.eightBox.questions} title={Text.eightBox.title} objName={'CostStructure'} />\r\n                                </div>\r\n                                {/* RevenueStreams - box */}\r\n                                <div className='flex flex-col lg:row-span-2 lg:col-span-3 2xl:border-b-0 xl:border-b-0 lg:border-b-0 border-b-2 lg:border-gray-300 gap-2 w-full hover:bg-gray-100'>\r\n                                    <Percentage objName={'RevenueStreams'} />\r\n                                    <EditableDiv list={Text.ninthBox.questions} title={Text.ninthBox.title} objName={'RevenueStreams'} />\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"flex justify-center items-center gap-2 p-3 rounded-lg font-bold h-screen cursor-wait col-span-full\">\r\n                                <svg className=\"h-20 w-20 animate-spin\" viewBox=\"3 3 18 18\">\r\n                                    <path\r\n                                        className=\"fill-gray-300\"\r\n                                        d=\"M12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z\"></path>\r\n                                    <path\r\n                                        className=\"fill-primary\"\r\n                                        d=\"M16.9497 7.05015C14.2161 4.31648 9.78392 4.31648 7.05025 7.05015C6.65973 7.44067 6.02656 7.44067 5.63604 7.05015C5.24551 6.65962 5.24551 6.02646 5.63604 5.63593C9.15076 2.12121 14.8492 2.12121 18.364 5.63593C18.7545 6.02646 18.7545 6.65962 18.364 7.05015C17.9734 7.44067 17.3403 7.44067 16.9497 7.05015Z\"></path>\r\n                                </svg>\r\n                                <span className=\"text-4xl\">Loading...</span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"flex mt-1 justify-between items-center 2xl:flex-row xl:flex-row lg:flex-row md:flex-col-reverse flex-col-reverse gap-5\">\r\n                    <div className='2xl:w-3/4 xl:w-3/4 lg:w-3/4 md:w-3/4 w-full'>\r\n                        <p>\r\n                            Business Model Canvas by Alexander Osterwalder from <a className='text-blue-600 underline' href=\"https://www.strategyzer.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Strategyzer.com </a>. The business model canvas itself is licensed under the <a className='text-blue-600 underline' href=\"https://creativecommons.org/licenses/by-sa/3.0/deed.en\" target=\"_blank\" rel=\"noopener noreferrer\">CC BY SA 3.0.</a> / Modifications by StemJee Inc.\r\n                        </p>\r\n                    </div>\r\n                    <div className='flex gap-3 mt-5'>\r\n                        <button\r\n                            onClick={() => dispatch({ type: \"RESET_STATE\" })}\r\n                            className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg\">\r\n                            Clear Template\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='flex flex-col gap-2'>\r\n                    <h1 className='text-3xl font-bold'>Brainstorming Notes</h1>\r\n                    <p>Write down you thought here and then move them to necessary section.</p>\r\n                    <BrainstormingSec objName={'BrainstormingNotes'} />\r\n                </div>\r\n\r\n                {/* <div>\r\n                    <PDFViewer height={500} width={\"100%\"}>\r\n                        <BMCPdf form={form} canvas_name={canvas_name} />\r\n                    </PDFViewer>\r\n                </div> */}\r\n\r\n                <ToastContainer\r\n                    position=\"bottom-right\"\r\n                    autoClose={1000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    // pauseOnFocusLoss\r\n                    // draggable\r\n                    // pauseOnHover\r\n                    theme=\"colored\"\r\n                />\r\n\r\n            </div >\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst LoadingBtn = () => {\r\n    <button\r\n        disabled\r\n        className=\"bg-primary text-white p-2 font-medium flex gap-3 justify-center items-center hover:bg-opacity-80 px-3 rounded-lg cursor-wait\">\r\n        <svg className=\"h-20 w-20 animate-spin\" viewBox=\"3 3 18 18\">\r\n            <path\r\n                className=\"fill-white\"\r\n                d=\"M12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5ZM3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12Z\"></path>\r\n            <path\r\n                className=\"fill-primary\"\r\n                d=\"M16.9497 7.05015C14.2161 4.31648 9.78392 4.31648 7.05025 7.05015C6.65973 7.44067 6.02656 7.44067 5.63604 7.05015C5.24551 6.65962 5.24551 6.02646 5.63604 5.63593C9.15076 2.12121 14.8492 2.12121 18.364 5.63593C18.7545 6.02646 18.7545 6.65962 18.364 7.05015C17.9734 7.44067 17.3403 7.44067 16.9497 7.05015Z\"></path>\r\n        </svg>\r\n        Loading\r\n    </button>\r\n}"],"names":["module","exports","firstBox","title","questions","secondBox","thirdBox","forthBox","fifthBox","sixthBox","seventhBox","eightBox","ninthBox","limits","KeyPartnerships","KeyActivities","ValuePropositions","CustomerRelationships","CustomerSegments","Channels","KeyResources","RevenueStreams","CostStructure","BrainstormingNotes","TextInputField","_ref","setInpActive","objName","containerRef","useRef","_useState","useState","_useState2","_slicedToArray","inpValue","setInpValue","_useGlobalState","useGlobalState","dispatch","form","useEffect","handleEnter","e","keyCode","list","length","type","payload","_objectSpread","_defineProperty","concat","_toConsumableArray","console","log","document","addEventListener","handleEsc","handleClickOutside","current","contains","target","removeEventListener","handleFontStyle","fontStyle","execCommand","_jsxs","ref","children","_jsx","className","role","contentEditable","onClick","onInput","_step","allowedTags","doc","DOMParser","parseFromString","innerHTML","validatedContent","_iterator","_createForOfIteratorHelper","body","childNodes","s","n","done","node","value","nodeType","Node","TEXT_NODE","textContent","includes","tagName","toLowerCase","attrs","Array","from","attributes","map","attr","name","join","err","f","startsWith","replace","RegExp","onPaste","preventDefault","text","clipboardData","getData","fontLink","links","prompt","handleFontLink","BiLink","fontUnLink","BiUnlink","EditInput","handleEdit","index","setNewInpValue","valueToEdit","window","dangerouslySetInnerHTML","__html","List","delVa","newInpValue","_useState3","_useState4","showMenu","setShowMenu","onDoubleClick","RxDragHandleDots2","RiEditBoxLine","updatedList","filter","partner","handleDelete","RiDeleteBinLine","EditableDiv","_form$objName$list","inpActive","dragItem","dragOverItem","handleSort","_text","draggedItemContent","splice","newValue","newItems","_Fragment","BsExclamationLg","draggable","onDragStart","onDragEnter","onDragEnd","onDragOver","React","objeName","maxLen","Math","floor","handleTopPercentage","BrainstormingSec","input","setInput","Font","family","format","fonts","src","RobotoBold","RobotoItalic","RobotoBoldItalic","styles","StyleSheet","page","backgroundColor","invoiceDateContainer","flexDirection","justifyContent","margin","label","fontSize","tableContainer","flexWrap","marginLeft","marginBottom","borderWidth","borderColor","width","firstRow","height","borderLeft","borderTop","firstRowInner","borderRight","firstRowLastCol","secRow","borderBottom","borderRightNone","border","marginHorizontal","marginVertical","fontFamily","fontWeight","container","display","marginRight","marginTop","date","BMCPdf","canvas_name","Date","toLocaleDateString","handleTag","ele","bold","italic","link","htmlDoc","getElementsByTagName","i","element","getAttribute","innerText","data","View","style","Text","RobotoRegular","classStyle","Link","Document","Page","size","orientation","Percentage","BMCModule","user","confirm","setConfirm","canvas","setCanvas","_useState5","_useState6","canvasName","setCanvasName","_useState7","_useState8","id","setId","_useState9","_useState10","canvasLoading","setCanvasLoading","token","Cookies","handlePostForm","_asyncToGenerator","_regeneratorRuntime","mark","_callee","resp","wrap","_context","prev","next","axios","process","google_id","headers","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","theme","t0","response","message","sent","t1","stop","apply","arguments","_ref2","_callee2","_context2","fetchData","_ref3","_callee3","_yield$axios$get","_context3","getCanvas","_ref4","_callee4","_canvas_name","_context4","handleCreateNewForm","onChange","selected","disabled","placeholder","required","PDFDownloadLink","Suspense","fallback","LoadingBtn","fileName","BiDownload","viewBox","d","href","rel","ToastContainer","newestOnTop","rtl","Footer"],"sourceRoot":""}